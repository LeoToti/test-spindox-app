{"ast":null,"code":"var _jsxFileName = \"/Users/leonardototi/Documents/GitHub/test-spindox/src/components/Home.jsx\";\nimport { react, useState, useEffect } from \"react\";\nimport Profile from \"./Profile\";\nimport axios from \"axios\"; // const Home = () => {\n//   const [user, setUser] = useState([]);;\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\n//         `https://randomuser.me/api`,\n//       );\n//       console.log(result.data.results)\n//       setUser(result.data.results);\n//       console.log(user)\n//     };\n//     fetchData();\n//   }, []);\n//   useEffect(() => {\n//     const componentDidUpdate = async ( previousState) => {\n//         if (previousState !== user) {\n//           this.fectchData();\n//         }\n//       };\n// })\n//   return (\n//     <div>\n//    {user.map((x) => {\n//        <p>{x.name.first}</p>\n//    })}\n//     </div>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: \"\",\n      queryError: \"\",\n      selected: [],\n      isLoading: false\n    };\n\n    this.fectchData = async function () {\n      this.setState({\n        isLoading: true\n      });\n      let endpoint = \"https://api.tvmaze.com/search/shows\";\n      let query = this.state.query;\n      let endpointQuery = \"?q=\" + query.replace(\" \", \"%20\");\n\n      try {\n        let response = await fetch(endpoint + endpointQuery);\n\n        if (response.ok) {\n          console.log(\"Response is ok!!\");\n          let data = await response.json();\n          console.log(data.show);\n\n          if (data) {\n            this.setState({\n              queryError: \"\"\n            });\n            this.setState({\n              selected: data\n            });\n            console.log(this.state.selected);\n            this.setState({\n              isLoading: false\n            });\n          } else {\n            this.setState({\n              queryError: data.Error\n            });\n            this.setState({\n              isLoading: false\n            });\n            console.log(this.state.queryError);\n          }\n        } else {\n          alert(\"Cant fetch the data!\");\n        }\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    this.componentDidMount = async function () {\n      this.fectchData();\n    };\n\n    this.componentDidUpdate = async (previousProps, previousState) => {\n      if (previousState.query !== this.state.query) {\n        this.fectchData();\n      }\n    };\n\n    this.load = this.props.loading;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center mt-2 mb-2\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"inline ombra\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"text\",\n              placeholder: \"Search Movies\",\n              value: this.state.query,\n              onChange: e => this.setState({\n                query: e.target.value\n              }),\n              className: \" mr-sm-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-2\",\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"mx-1\",\n                animation: \"grow\",\n                variant: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"mx-1\",\n                animation: \"grow\",\n                variant: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n                className: \"mx-1\",\n                animation: \"grow\",\n                variant: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: this.state.selected.map(film => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-2 m-1  \",\n              onClick: () => this.props.history.push(\"/details/\" + film.show.id),\n              onDoubleClick: true,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"text-truncate\",\n                children: film.show.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this), !this.props.loading && film.show.image != null ? /*#__PURE__*/_jsxDEV(\"img\", {\n                height: \"250px\",\n                alt: film.title,\n                className: \"d-block w-80 \",\n                src: film.show.image.medium\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                height: \"250px\",\n                alt: film.title,\n                className: \"d-block w-80\",\n                src: \"https://via.placeholder.com/150\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [film.show.genres[0], \" - \", film.show.ended]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)]\n            }, film.show.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/leonardototi/Documents/GitHub/test-spindox/src/components/Home.jsx"],"names":["react","useState","useEffect","Profile","axios","Home","React","Component","state","query","queryError","selected","isLoading","fectchData","setState","endpoint","endpointQuery","replace","response","fetch","ok","console","log","data","json","show","Error","alert","error","componentDidMount","componentDidUpdate","previousProps","previousState","load","props","loading","render","e","target","value","map","film","history","push","id","name","image","title","medium","genres","ended"],"mappings":"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","sourcesContent":["import { react, useState, useEffect } from \"react\";\nimport Profile from \"./Profile\"\nimport axios from \"axios\";\n\n// const Home = () => {\n//   const [user, setUser] = useState([]);;\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\n//         `https://randomuser.me/api`,\n        \n//       );\n//       console.log(result.data.results)\n\n      \n//       setUser(result.data.results);\n//       console.log(user)\n      \n//     };\n    \n\n//     fetchData();\n   \n//   }, []);\n//   useEffect(() => {\n//     const componentDidUpdate = async ( previousState) => {\n//         if (previousState !== user) {\n//           this.fectchData();\n//         }\n//       };\n// })\n\n//   return (\n//     <div>\n//    {user.map((x) => {\n//        <p>{x.name.first}</p>\n//    })}\n//     </div>\n//   );\n\n\n\n\n// };\nclass Home extends React.Component {\n    state = {\n      query: \"\",\n      queryError: \"\",\n      selected: [],\n      isLoading: false,\n    };\n  \n    fectchData = async function () {\n      this.setState({ isLoading: true });\n      let endpoint = \"https://api.tvmaze.com/search/shows\";\n      let query = this.state.query;\n      let endpointQuery = \"?q=\" + query.replace(\" \", \"%20\");\n      try {\n        let response = await fetch(endpoint + endpointQuery);\n  \n        if (response.ok) {\n          console.log(\"Response is ok!!\");\n          let data = await response.json();\n          console.log(data.show);\n          if (data) {\n            this.setState({ queryError: \"\" });\n            this.setState({ selected: data });\n            console.log(this.state.selected);\n            this.setState({ isLoading: false });\n          } else {\n            this.setState({ queryError: data.Error });\n            this.setState({ isLoading: false });\n            console.log(this.state.queryError);\n          }\n        } else {\n          alert(\"Cant fetch the data!\");\n        }\n      } catch (error) {\n        alert(error);\n      }\n    };\n  \n    componentDidMount = async function () {\n      this.fectchData();\n    };\n  \n    componentDidUpdate = async (previousProps, previousState) => {\n      if (previousState.query !== this.state.query) {\n        this.fectchData();\n      }\n    };\n  \n    load = this.props.loading;\n  \n    render() {\n      \n      return (\n        <>\n        <Container>\n         <Row className=\"justify-content-md-center mt-2 mb-2\">\n       \n            <Form className=\"inline ombra\">\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search Movies\"\n                value={this.state.query}\n                onChange={(e) => this.setState({ query: e.target.value })}\n                className=\" mr-sm-2\"\n              />\n             \n              {this.state.isLoading && (\n                <div className=\"ml-2\">\n                  <Spinner className=\"mx-1\" animation=\"grow\" variant=\"danger\" />\n                  <Spinner className=\"mx-1\" animation=\"grow\" variant=\"danger\" />\n                  <Spinner className=\"mx-1\" animation=\"grow\" variant=\"danger\" />\n                </div>\n              )}\n            </Form>\n            </Row>\n            <Row className=\"justify-content-md-center\">\n              \n              {this.state.selected.map((film) => {\n                return (\n                  <div\n                    key={film.show.id}\n                    className=\"col-md-2 m-1  \"\n                    onClick={() =>\n                      this.props.history.push(\"/details/\" + film.show.id)\n                    }\n                    onDoubleClick\n                  >\n                    <span class=\"text-truncate\">{film.show.name}</span>\n                    {!this.props.loading && film.show.image != null ? (\n                      <img\n                        height=\"250px\"\n                        alt={film.title}\n                        className=\"d-block w-80 \"\n                        src={film.show.image.medium}\n                      />\n                    ) : (\n                      <img\n                        height=\"250px\"\n                        alt={film.title}\n                        className=\"d-block w-80\"\n                        src={\"https://via.placeholder.com/150\"}\n                      />\n                    )}\n                    \n                    <p>{film.show.genres[0]} - {film.show.ended}</p>\n                  </div>\n                );\n              })}\n            </Row>\n            </Container>\n         \n        </>\n      );\n    }\n  }\n  \n\n\n\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}