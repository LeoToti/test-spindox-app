{"ast":null,"code":"import React from \"react\";\nimport Profile from \"./Profile\";\nimport axios from \"axios\"; // const Home = () => {\n//   const [user, setUser] = useState([]);;\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\n//         `https://randomuser.me/api`,\n//       );\n//       console.log(result.data.results)\n//       setUser(result.data.results);\n//       console.log(user)\n//     };\n//     fetchData();\n//   }, []);\n//   useEffect(() => {\n//     const componentDidUpdate = async ( previousState) => {\n//         if (previousState !== user) {\n//           this.fectchData();\n//         }\n//       };\n// })\n//   return (\n//     <div>\n//    {user.map((x) => {\n//        <p>{x.name.first}</p>\n//    })}\n//     </div>\n//   );\n// };\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      queryError: \"\",\n      selected: []\n    };\n\n    this.fectchData = async function () {\n      this.setState({\n        isLoading: true\n      });\n      let endpoint = \"https://randomuser.me/api\";\n\n      try {\n        let response = await fetch(endpoint);\n\n        if (response.ok) {\n          console.log(\"Response is ok!!\");\n          let data = await response.json();\n          console.log(data);\n\n          if (data) {\n            this.setState({\n              selected: data\n            });\n            console.log(this.state.selected);\n          } else {\n            this.setState({\n              queryError: data.Error\n            });\n            console.log(this.state.queryError);\n          }\n        } else {\n          alert(\"Cant fetch the data!\");\n        }\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    this.componentDidMount = async function () {\n      this.fectchData();\n    };\n\n    this.load = this.props.loading;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/leonardototi/Documents/GitHub/test-spindox/src/components/Home.jsx"],"names":["React","Profile","axios","Home","Component","state","queryError","selected","fectchData","setState","isLoading","endpoint","response","fetch","ok","console","log","data","json","Error","alert","error","componentDidMount","load","props","loading","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;AACA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADuB;;AAAA,SAQ/BC,UAR+B,GAQlB,kBAAkB;AAC7B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,UAAIC,QAAQ,GAAG,2BAAf;;AAEA,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA1B;;AAEA,YAAIC,QAAQ,CAACE,EAAb,EAAiB;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,cAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AACA,cAAIA,IAAJ,EAAU;AACR,iBAAKR,QAAL,CAAc;AAAEF,cAAAA,QAAQ,EAAEU;AAAZ,aAAd;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWE,QAAvB;AAED,WAJD,MAIO;AACL,iBAAKE,QAAL,CAAc;AAAEH,cAAAA,UAAU,EAAEW,IAAI,CAACE;AAAnB,aAAd;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,UAAvB;AACD;AACF,SAZD,MAYO;AACLc,UAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,OAlBD,CAkBE,OAAOC,KAAP,EAAc;AACdD,QAAAA,KAAK,CAACC,KAAD,CAAL;AACD;AACF,KAjC8B;;AAAA,SAmC/BC,iBAnC+B,GAmCX,kBAAkB;AACpC,WAAKd,UAAL;AACD,KArC8B;;AAAA,SAyC/Be,IAzC+B,GAyCxB,KAAKC,KAAL,CAAWC,OAzCa;AAAA;;AA2C/BC,EAAAA,MAAM,GAAG;AAEP,wBACE,qCADF;AAMD;;AAnD8B;;AA0DnC,eAAevB,IAAf","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\"\nimport axios from \"axios\";\n\n// const Home = () => {\n//   const [user, setUser] = useState([]);;\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\n//         `https://randomuser.me/api`,\n        \n//       );\n//       console.log(result.data.results)\n\n      \n//       setUser(result.data.results);\n//       console.log(user)\n      \n//     };\n    \n\n//     fetchData();\n   \n//   }, []);\n//   useEffect(() => {\n//     const componentDidUpdate = async ( previousState) => {\n//         if (previousState !== user) {\n//           this.fectchData();\n//         }\n//       };\n// })\n\n//   return (\n//     <div>\n//    {user.map((x) => {\n//        <p>{x.name.first}</p>\n//    })}\n//     </div>\n//   );\n\n\n\n\n// };\nclass Home extends React.Component {\n    state = {\n     \n      queryError: \"\",\n      selected: [],\n    \n    };\n  \n    fectchData = async function () {\n      this.setState({ isLoading: true });\n      let endpoint = \"https://randomuser.me/api\";\n      \n      try {\n        let response = await fetch(endpoint);\n  \n        if (response.ok) {\n          console.log(\"Response is ok!!\");\n          let data = await response.json();\n          console.log(data);\n          if (data) {\n            this.setState({ selected: data });\n            console.log(this.state.selected);\n           \n          } else {\n            this.setState({ queryError: data.Error });\n            console.log(this.state.queryError);\n          }\n        } else {\n          alert(\"Cant fetch the data!\");\n        }\n      } catch (error) {\n        alert(error);\n      }\n    };\n  \n    componentDidMount = async function () {\n      this.fectchData();\n    };\n  \n\n  \n    load = this.props.loading;\n  \n    render() {\n      \n      return (\n        <>\n       \n         \n        </>\n      );\n    }\n  }\n  \n\n\n\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}