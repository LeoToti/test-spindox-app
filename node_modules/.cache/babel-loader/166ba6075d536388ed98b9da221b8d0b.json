{"ast":null,"code":"var _jsxFileName = \"/Users/leonardototi/Documents/GitHub/test-spindox/src/components/Home.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport axios from \"axios\"; // const Home = () => {\n//   const [user, setUser] = useState([]);;\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\n//         `https://randomuser.me/api`,\n//       );\n//       console.log(result.data.results)\n//       setUser(result.data.results);\n//       console.log(user)\n//     };\n//     fetchData();\n//   }, []);\n//   useEffect(() => {\n//     const componentDidUpdate = async ( previousState) => {\n//         if (previousState !== user) {\n//           this.fectchData();\n//         }\n//       };\n// })\n//   return (\n//     <div>\n//    {user.map((x) => {\n//        <p>{x.name.first}</p>\n//    })}\n//     </div>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      queryError: \"\",\n      selected: []\n    };\n\n    this.fectchData = async function () {\n      this.setState({\n        isLoading: true\n      });\n      let endpoint = \"https://randomuser.me/api\";\n\n      try {\n        let response = await fetch(endpoint);\n\n        if (response.ok) {\n          console.log(\"Response is ok!!\");\n          let data = await response.json();\n          console.log(data);\n\n          if (data) {\n            this.setState({\n              selected: data.results\n            });\n            console.log(this.state.selected);\n          } else {\n            this.setState({\n              queryError: data.Error\n            });\n            console.log(this.state.queryError);\n          }\n        } else {\n          alert(\"Cant fetch the data!\");\n        }\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    this.componentDidMount = async function () {\n      this.fectchData();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.selected.map(film => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"this.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/leonardototi/Documents/GitHub/test-spindox/src/components/Home.jsx"],"names":["React","Profile","axios","Home","Component","state","queryError","selected","fectchData","setState","isLoading","endpoint","response","fetch","ok","console","log","data","json","results","Error","alert","error","componentDidMount","render","map","film"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADyB;;AAAA,SAMjCC,UANiC,GAMpB,kBAAkB;AAC7B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,UAAIC,QAAQ,GAAG,2BAAf;;AAEA,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA1B;;AAEA,YAAIC,QAAQ,CAACE,EAAb,EAAiB;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,cAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AACA,cAAIA,IAAJ,EAAU;AACR,iBAAKR,QAAL,CAAc;AAAEF,cAAAA,QAAQ,EAAEU,IAAI,CAACE;AAAjB,aAAd;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWE,QAAvB;AACD,WAHD,MAGO;AACL,iBAAKE,QAAL,CAAc;AAAEH,cAAAA,UAAU,EAAEW,IAAI,CAACG;AAAnB,aAAd;AACAL,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,UAAvB;AACD;AACF,SAXD,MAWO;AACLe,UAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,OAjBD,CAiBE,OAAOC,KAAP,EAAc;AACdD,QAAAA,KAAK,CAACC,KAAD,CAAL;AACD;AACF,KA9BgC;;AAAA,SAgCjCC,iBAhCiC,GAgCb,kBAAkB;AACpC,WAAKf,UAAL;AACD,KAlCgC;AAAA;;AAsCjCgB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,gBACL,KAAKnB,KAAL,CAAWE,QAAX,CAAoBkB,GAApB,CAAyBC,IAAD,IAAU;AAC1B,4BACE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANP;AADK,qBAAP;AASD;;AAhDgC;;AAmDnC,eAAevB,IAAf","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\nimport axios from \"axios\";\n\n// const Home = () => {\n//   const [user, setUser] = useState([]);;\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\n//         `https://randomuser.me/api`,\n\n//       );\n//       console.log(result.data.results)\n\n//       setUser(result.data.results);\n//       console.log(user)\n\n//     };\n\n//     fetchData();\n\n//   }, []);\n//   useEffect(() => {\n//     const componentDidUpdate = async ( previousState) => {\n//         if (previousState !== user) {\n//           this.fectchData();\n//         }\n//       };\n// })\n\n//   return (\n//     <div>\n//    {user.map((x) => {\n//        <p>{x.name.first}</p>\n//    })}\n//     </div>\n//   );\n\n// };\nclass Home extends React.Component {\n  state = {\n    queryError: \"\",\n    selected: [],\n  };\n\n  fectchData = async function () {\n    this.setState({ isLoading: true });\n    let endpoint = \"https://randomuser.me/api\";\n\n    try {\n      let response = await fetch(endpoint);\n\n      if (response.ok) {\n        console.log(\"Response is ok!!\");\n        let data = await response.json();\n        console.log(data);\n        if (data) {\n          this.setState({ selected: data.results });\n          console.log(this.state.selected);\n        } else {\n          this.setState({ queryError: data.Error });\n          console.log(this.state.queryError);\n        }\n      } else {\n        alert(\"Cant fetch the data!\");\n      }\n    } catch (error) {\n      alert(error);\n    }\n  };\n\n  componentDidMount = async function () {\n    this.fectchData();\n  };\n\n \n\n  render() {\n    return <>\n     {this.state.selected.map((film) => {\n              return (\n                <div>\n                  <p>this.</p>\n                </div>\n              );\n            })}\n    </>;\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}