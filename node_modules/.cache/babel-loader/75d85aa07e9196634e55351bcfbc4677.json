{"ast":null,"code":"import { React, useState, useEffect } from \"react\";\nimport Profile from \"./Profile\";\nimport axios from \"axios\"; // const Home = () => {\n//   const [user, setUser] = useState([]);;\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\n//         `https://randomuser.me/api`,\n//       );\n//       console.log(result.data.results)\n//       setUser(result.data.results);\n//       console.log(user)\n//     };\n//     fetchData();\n//   }, []);\n//   useEffect(() => {\n//     const componentDidUpdate = async ( previousState) => {\n//         if (previousState !== user) {\n//           this.fectchData();\n//         }\n//       };\n// })\n//   return (\n//     <div>\n//    {user.map((x) => {\n//        <p>{x.name.first}</p>\n//    })}\n//     </div>\n//   );\n// };\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: \"\",\n      queryError: \"\",\n      selected: [],\n      isLoading: false\n    };\n\n    this.fectchData = async function () {\n      this.setState({\n        isLoading: true\n      });\n      let endpoint = \"https://api.tvmaze.com/search/shows\";\n      let query = this.state.query;\n      let endpointQuery = \"?q=\" + query.replace(\" \", \"%20\");\n\n      try {\n        let response = await fetch(endpoint + endpointQuery);\n\n        if (response.ok) {\n          console.log(\"Response is ok!!\");\n          let data = await response.json();\n          console.log(data.show);\n\n          if (data) {\n            this.setState({\n              queryError: \"\"\n            });\n            this.setState({\n              selected: data\n            });\n            console.log(this.state.selected);\n            this.setState({\n              isLoading: false\n            });\n          } else {\n            this.setState({\n              queryError: data.Error\n            });\n            this.setState({\n              isLoading: false\n            });\n            console.log(this.state.queryError);\n          }\n        } else {\n          alert(\"Cant fetch the data!\");\n        }\n      } catch (error) {\n        alert(error);\n      }\n    };\n\n    this.componentDidMount = async function () {\n      this.fectchData();\n    };\n\n    this.componentDidUpdate = async (previousProps, previousState) => {\n      if (previousState.query !== this.state.query) {\n        this.fectchData();\n      }\n    };\n\n    this.load = this.props.loading;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/leonardototi/Documents/GitHub/test-spindox/src/components/Home.jsx"],"names":["React","useState","useEffect","Profile","axios","Home","Component","state","query","queryError","selected","isLoading","fectchData","setState","endpoint","endpointQuery","replace","response","fetch","ok","console","log","data","json","show","Error","alert","error","componentDidMount","componentDidUpdate","previousProps","previousState","load","props","loading","render"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;AACA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,SAAS,EAAE;AAJL,KADuB;;AAAA,SAQ/BC,UAR+B,GAQlB,kBAAkB;AAC7B,WAAKC,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,UAAIG,QAAQ,GAAG,qCAAf;AACA,UAAIN,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,UAAIO,aAAa,GAAG,QAAQP,KAAK,CAACQ,OAAN,CAAc,GAAd,EAAmB,KAAnB,CAA5B;;AACA,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,GAAGC,aAAZ,CAA1B;;AAEA,YAAIE,QAAQ,CAACE,EAAb,EAAiB;AACfC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,cAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACE,IAAjB;;AACA,cAAIF,IAAJ,EAAU;AACR,iBAAKT,QAAL,CAAc;AAAEJ,cAAAA,UAAU,EAAE;AAAd,aAAd;AACA,iBAAKI,QAAL,CAAc;AAAEH,cAAAA,QAAQ,EAAEY;AAAZ,aAAd;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWG,QAAvB;AACA,iBAAKG,QAAL,CAAc;AAAEF,cAAAA,SAAS,EAAE;AAAb,aAAd;AACD,WALD,MAKO;AACL,iBAAKE,QAAL,CAAc;AAAEJ,cAAAA,UAAU,EAAEa,IAAI,CAACG;AAAnB,aAAd;AACA,iBAAKZ,QAAL,CAAc;AAAEF,cAAAA,SAAS,EAAE;AAAb,aAAd;AACAS,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWE,UAAvB;AACD;AACF,SAdD,MAcO;AACLiB,UAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,OApBD,CAoBE,OAAOC,KAAP,EAAc;AACdD,QAAAA,KAAK,CAACC,KAAD,CAAL;AACD;AACF,KApC8B;;AAAA,SAsC/BC,iBAtC+B,GAsCX,kBAAkB;AACpC,WAAKhB,UAAL;AACD,KAxC8B;;AAAA,SA0C/BiB,kBA1C+B,GA0CV,OAAOC,aAAP,EAAsBC,aAAtB,KAAwC;AAC3D,UAAIA,aAAa,CAACvB,KAAd,KAAwB,KAAKD,KAAL,CAAWC,KAAvC,EAA8C;AAC5C,aAAKI,UAAL;AACD;AACF,KA9C8B;;AAAA,SAgD/BoB,IAhD+B,GAgDxB,KAAKC,KAAL,CAAWC,OAhDa;AAAA;;AAkD/BC,EAAAA,MAAM,GAAG;AAEP,wBACE,qCADF;AAMD;;AA1D8B;;AAiEnC,eAAe9B,IAAf","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport Profile from \"./Profile\"\nimport axios from \"axios\";\n\n// const Home = () => {\n//   const [user, setUser] = useState([]);;\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const result = await axios(\n//         `https://randomuser.me/api`,\n        \n//       );\n//       console.log(result.data.results)\n\n      \n//       setUser(result.data.results);\n//       console.log(user)\n      \n//     };\n    \n\n//     fetchData();\n   \n//   }, []);\n//   useEffect(() => {\n//     const componentDidUpdate = async ( previousState) => {\n//         if (previousState !== user) {\n//           this.fectchData();\n//         }\n//       };\n// })\n\n//   return (\n//     <div>\n//    {user.map((x) => {\n//        <p>{x.name.first}</p>\n//    })}\n//     </div>\n//   );\n\n\n\n\n// };\nclass Home extends React.Component {\n    state = {\n      query: \"\",\n      queryError: \"\",\n      selected: [],\n      isLoading: false,\n    };\n  \n    fectchData = async function () {\n      this.setState({ isLoading: true });\n      let endpoint = \"https://api.tvmaze.com/search/shows\";\n      let query = this.state.query;\n      let endpointQuery = \"?q=\" + query.replace(\" \", \"%20\");\n      try {\n        let response = await fetch(endpoint + endpointQuery);\n  \n        if (response.ok) {\n          console.log(\"Response is ok!!\");\n          let data = await response.json();\n          console.log(data.show);\n          if (data) {\n            this.setState({ queryError: \"\" });\n            this.setState({ selected: data });\n            console.log(this.state.selected);\n            this.setState({ isLoading: false });\n          } else {\n            this.setState({ queryError: data.Error });\n            this.setState({ isLoading: false });\n            console.log(this.state.queryError);\n          }\n        } else {\n          alert(\"Cant fetch the data!\");\n        }\n      } catch (error) {\n        alert(error);\n      }\n    };\n  \n    componentDidMount = async function () {\n      this.fectchData();\n    };\n  \n    componentDidUpdate = async (previousProps, previousState) => {\n      if (previousState.query !== this.state.query) {\n        this.fectchData();\n      }\n    };\n  \n    load = this.props.loading;\n  \n    render() {\n      \n      return (\n        <>\n       \n         \n        </>\n      );\n    }\n  }\n  \n\n\n\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}